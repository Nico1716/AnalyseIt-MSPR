name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  lint-and-test-backend:
    name: Lint and Test Backend
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
          MYSQL_DATABASE: pandemics_db
          MYSQL_USER: user
          MYSQL_PASSWORD: password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      DB_USER: user
      DB_PASSWORD: password
      DB_HOST: localhost
      DB_PORT: 3306
      DB_NAME: pandemics_db
      SECRET_KEY: "your-secret-key-here"
      PYTHONPATH: /app
      SQLALCHEMY_DATABASE_URL: mysql+pymysql://user:password@localhost:3306/pandemics_db
      TESTING: true

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Install dependencies
        run: |
          cd backend
          pip install -r requirements.txt

      - name: Wait for MySQL
        run: |
          while ! mysqladmin ping -h"127.0.0.1" -P"3306" --silent; do
            sleep 1
          done

      - name: Lint backend
        run: |
          cd backend
          flake8 .

      - name: Run backend tests
        run: |
          cd backend
          pytest -v

  lint-and-test-frontend:
    name: Lint and Test Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: |
          cd frontend
          npm install
          npm install -D postcss-import autoprefixer tailwindcss @tailwindcss/forms

      - name: Verify PostCSS config
        run: |
          cd frontend
          if [ ! -f postcss.config.js ]; then
            echo "module.exports = {
              plugins: {
                'postcss-import': {},
                'tailwindcss': {},
                'autoprefixer': {},
              }
            }" > postcss.config.js
          fi

      - name: Lint frontend
        run: |
          cd frontend
          npm run lint

      - name: Run frontend tests
        run: |
          cd frontend
          npm run test

  build-and-push-docker:
    name: Build and Push Docker Images
    runs-on: ubuntu-latest
    needs: [lint-and-test-backend, lint-and-test-frontend]
    if: github.ref == 'refs/heads/main' 

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and push backend image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/analyseit-backend ./backend
          docker push ${{ secrets.DOCKER_USERNAME }}/analyseit-backend

      - name: Build and push frontend image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/analyseit-frontend ./frontend
          docker push ${{ secrets.DOCKER_USERNAME }}/analyseit-frontend

  deploy-railway:
    name: Deploy to Railway
    runs-on: ubuntu-latest
    needs: [lint-and-test-backend, lint-and-test-frontend]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Railway CLI
        run: npm install -g @railway/cli

      - name: Deploy backend to Railway
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        run: |
          cd backend
          railway up --service AnaliseIT-Backend